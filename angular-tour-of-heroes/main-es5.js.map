{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","AppComponent","title","AppModule","DashboardComponent","heroService","heroes","getHeroes","subscribe","slice","HeroDetailComponent","route","location","getHero","snapshot","paramMap","get","hero","back","updateHero","goBack","HeroSearchComponent","searchTerms","term","next","heroes$","pipe","searchHeroes","HeroService","http","messageService","heroesUrl","httpOptions","headers","_","log","handleError","url","h","outcome","trim","x","length","post","newHero","put","operation","result","error","console","message","add","HeroesComponent","name","addHero","push","filter","deleteHero","InMemoryDataService","Math","max","map","MessageService","messages","MessagesComponent","environment","production","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { HeroesComponent } from \"./heroes/heroes.component\";\nimport { HeroDetailComponent } from \"./hero-detail/hero-detail.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\" },\n  { path: \"dashboard\", component: DashboardComponent },\n  { path: \"detail/:id\", component: HeroDetailComponent },\n  { path: \"heroes\", component: HeroesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<h1>{{ title }}</h1>\r\n<nav>\r\n  <a routerLink=\"/dashboard\">Dashboard</a>\r\n  <a routerLink=\"/heroes\">Heroes</a>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n<app-messages></app-messages>\r\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"Tour of Heroes\";\n}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { HttpClientInMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { InMemoryDataService } from \"./in-memory-data.service\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\n\nimport { AppComponent } from \"./app.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { HeroDetailComponent } from \"./hero-detail/hero-detail.component\";\nimport { HeroesComponent } from \"./heroes/heroes.component\";\nimport { HeroSearchComponent } from \"./hero-search/hero-search.component\";\nimport { MessagesComponent } from \"./messages/messages.component\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n      dataEncapsulation: false\n    })\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    HeroSearchComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n  <a\n    *ngFor=\"let hero of heroes\"\n    class=\"col-1-4\"\n    routerLink=\"/detail/{{ hero.id }}\"\n  >\n    <div class=\"module hero\">\n      <h4>{{ hero.name }}</h4>\n    </div>\n  </a>\n</div>\n\n<app-hero-search></app-hero-search>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Hero } from \"../hero\";\nimport { HeroService } from \"../hero.service\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) {}\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService\n      .getHeroes()\n      .subscribe(heroes => (this.heroes = heroes.slice(1, 5)));\n  }\n}\n","<div *ngIf=\"hero\">\n  <h2>{{ hero.name | uppercase }} Details</h2>\n  <div><span>id: </span>{{ hero.id }}</div>\n  <div>\n    <label\n      >name:\n      <input [(ngModel)]=\"hero.name\" placeholder=\"name\" />\n    </label>\n  </div>\n  <button (click)=\"goBack()\">Back</button>\n  <button (click)=\"save()\">save</button>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\n\nimport { Hero } from \"../hero\";\nimport { HeroService } from \"../hero.service\";\n\n@Component({\n  selector: \"app-hero-detail\",\n  templateUrl: \"./hero-detail.component.html\",\n  styleUrls: [\"./hero-detail.component.scss\"]\n})\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get(\"id\");\n    this.heroService.getHero(id).subscribe(hero => (this.hero = hero));\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.heroService.updateHero(this.hero).subscribe(() => this.goBack());\n  }\n}\n","<div id=\"search-component\">\n  <h4><label for=\"search-box\">Hero Search</label></h4>\n\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\">\n      <a routerLink=\"/detail/{{ hero.id }}\">\n        {{ hero.name }}\n      </a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { Observable, Subject } from \"rxjs\";\n\nimport { debounceTime, distinctUntilChanged, switchMap } from \"rxjs/operators\";\n\nimport { Hero } from \"../hero\";\nimport { HeroService } from \"../hero.service\";\n\n@Component({\n  selector: \"app-hero-search\",\n  templateUrl: \"./hero-search.component.html\",\n  styleUrls: [\"./hero-search.component.scss\"]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term))\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { Observable, of } from \"rxjs\";\nimport { catchError, map, tap } from \"rxjs/operators\";\n\nimport { Hero } from \"./hero\";\nimport { MessageService } from \"./message.service\";\n\n@Injectable({ providedIn: \"root\" })\nexport class HeroService {\n  private heroesUrl = \"api/heroes\"; // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) {}\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl).pipe(\n      tap(_ => this.log(\"fetched heroes\")),\n      catchError(this.handleError<Hero[]>(\"getHeroes\", []))\n    );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHeroNo404<Data>(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url).pipe(\n      map(heroes => heroes[0]), // returns a {0|1} element array\n      tap(h => {\n        const outcome = h ? `fetched` : `did not find`;\n        this.log(`${outcome} hero id=${id}`);\n      }),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x =>\n        x.length\n          ? this.log(`found heroes matching \"${term}\"`)\n          : this.log(`no heroes matching \"${term}\"`)\n      ),\n      catchError(this.handleError<Hero[]>(\"searchHeroes\", []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>(\"addHero\"))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === \"number\" ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>(\"deleteHero\"))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>(\"updateHero\"))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = \"operation\", result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\n","<h2>My Heroes</h2>\n\n<div>\n  <label\n    >Hero name:\n    <input #heroName />\n  </label>\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button (click)=\"add(heroName.value); heroName.value = ''\">\n    add\n  </button>\n</div>\n\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{ hero.id }}\">\n      <span class=\"badge\">{{ hero.id }}</span> {{ hero.name }}\n    </a>\n    <button class=\"delete\" title=\"delete hero\" (click)=\"delete(hero)\">Delete</button>\n  </li>\n</ul>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { Hero } from \"../hero\";\nimport { HeroService } from \"../hero.service\";\n\n@Component({\n  selector: \"app-heroes\",\n  templateUrl: \"./heroes.component.html\",\n  styleUrls: [\"./heroes.component.scss\"]\n})\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[];\n\n  constructor(private heroService: HeroService) {}\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes().subscribe(heroes => (this.heroes = heroes));\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) {\n      return;\n    }\n    this.heroService.addHero({ name } as Hero).subscribe(hero => {\n      this.heroes.push(hero);\n    });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero).subscribe();\n  }\n}\n","import { InMemoryDbService } from \"angular-in-memory-web-api\";\nimport { Hero } from \"./hero\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const heroes = [\n      { id: 11, name: \"Dr Nice\" },\n      { id: 12, name: \"Narco\" },\n      { id: 13, name: \"Bombasto\" },\n      { id: 14, name: \"Celeritas\" },\n      { id: 15, name: \"Magneta\" },\n      { id: 16, name: \"RubberMan\" },\n      { id: 17, name: \"Dynama\" },\n      { id: 18, name: \"Dr IQ\" },\n      { id: 19, name: \"Magma\" },\n      { id: 20, name: \"Tornado\" }\n    ];\n    return { heroes };\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  genId(heroes: Hero[]): number {\n    return heroes.length > 0\n      ? Math.max(...heroes.map(hero => hero.id)) + 1\n      : 11;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","<div *ngIf=\"messageService.messages.length\">\n  <h2>Messages</h2>\n  <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor=\"let message of messageService.messages\">{{ message }}</div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MessageService } from \"../message.service\";\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.scss\"]\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}